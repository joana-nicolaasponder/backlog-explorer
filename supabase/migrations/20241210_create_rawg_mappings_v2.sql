-- First, check if genres table has insert policy
DO $$ 
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM pg_policies 
        WHERE tablename = 'genres' AND cmd = 'INSERT'
    ) THEN
        CREATE POLICY "Allow authenticated users to create genres"
            ON genres
            FOR INSERT
            TO authenticated
            WITH CHECK (true);
    END IF;
END $$;

-- Create rawg_genre_mappings table
DROP TABLE IF EXISTS rawg_genre_mappings;
CREATE TABLE rawg_genre_mappings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rawg_id INTEGER NOT NULL,
    genre_id INTEGER NOT NULL REFERENCES genres(id),
    rawg_name TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
    UNIQUE(rawg_id, genre_id)
);

-- Create rawg_platform_mappings table
DROP TABLE IF EXISTS rawg_platform_mappings;
CREATE TABLE rawg_platform_mappings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rawg_id INTEGER NOT NULL,
    platform_id INTEGER NOT NULL REFERENCES platforms(id),
    rawg_name TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
    UNIQUE(rawg_id, platform_id)
);

-- Add RLS policies
ALTER TABLE rawg_genre_mappings ENABLE ROW LEVEL SECURITY;
ALTER TABLE rawg_platform_mappings ENABLE ROW LEVEL SECURITY;

-- Allow all authenticated users to read mappings
CREATE POLICY "Allow authenticated users to read genre mappings"
    ON rawg_genre_mappings
    FOR SELECT
    TO authenticated
    USING (true);

CREATE POLICY "Allow authenticated users to read platform mappings"
    ON rawg_platform_mappings
    FOR SELECT
    TO authenticated
    USING (true);

-- Allow authenticated users to create mappings
CREATE POLICY "Allow authenticated users to create genre mappings"
    ON rawg_genre_mappings
    FOR INSERT
    TO authenticated
    WITH CHECK (true);

CREATE POLICY "Allow authenticated users to create platform mappings"
    ON rawg_platform_mappings
    FOR INSERT
    TO authenticated
    WITH CHECK (true);

-- Refresh the schema cache
NOTIFY pgrst, 'reload schema';
